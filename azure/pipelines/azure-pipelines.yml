name: 'Azure Pipelines'

trigger:
  batch: true
  branches:
    include:
    - main
pr:
  autoCancel: false
  branches:
    include:
    - main

variables:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  Solution_File: $(System.DefaultWorkingDirectory)/demo/F0.Talks.MutationTesting.sln
  NuGet_Configuration_File: $(System.DefaultWorkingDirectory)/nuget.config
  Build_Configuration: 'Release'

jobs:
- job: unit_tests
  displayName: Unit Tests
  pool:
    vmImage: 'ubuntu-22.04'

  steps:
  - checkout: self
    displayName: Checkout
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: Setup .NET SDK
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
      performMultiLevelLookup: true
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: 'restore'
      restoreArguments: '$(Solution_File)'
      feedsToUse: 'config'
      nugetConfigPath: '$(NuGet_Configuration_File)'
      verbosityRestore: 'Minimal'
  - task: DotNetCoreCLI@2
    displayName: Execute Unit Tests
    inputs:
      command: 'test'
      arguments: '$(Solution_File) --logger trx --nologo --no-restore'
      publishTestResults: false
  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.trx'
      mergeTestResults: true

- job: code_coverage
  displayName: Code Coverage
  pool:
    vmImage: 'ubuntu-22.04'

  variables:
    Test_Settings_File: $(System.DefaultWorkingDirectory)/demo/test.runsettings
    Test_Results_Directory: '$(System.DefaultWorkingDirectory)/demo/TestResults'

  steps:
  - checkout: self
    displayName: Checkout
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: Setup .NET SDK
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
      performMultiLevelLookup: true
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: 'restore'
      restoreArguments: '$(Solution_File)'
      feedsToUse: 'config'
      nugetConfigPath: '$(NuGet_Configuration_File)'
      verbosityRestore: 'Minimal'
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: 'build'
      arguments: '$(Solution_File) --no-restore'
  - task: DotNetCoreCLI@2
    displayName: Collect Code Coverage
    inputs:
      command: 'test'
      arguments: '$(Solution_File) --collect:"XPlat Code Coverage" --nologo --no-restore --results-directory $(Test_Results_Directory) --settings $(Test_Settings_File)'
      publishTestResults: false
  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage report
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
      failIfCoverageEmpty: true

- job: mutation_testing
  displayName: Mutation Testing
  pool:
    vmImage: 'ubuntu-22.04'

  variables:
    Test_Project_Directory: $(System.DefaultWorkingDirectory)/demo
    Stryker_Configuration_File: $(System.DefaultWorkingDirectory)/demo/stryker-config.json

  steps:
  - checkout: self
    displayName: Checkout
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: Setup .NET SDK
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
      performMultiLevelLookup: true
  - task: DotNetCoreCLI@2
    displayName: Install .NET Tools
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'restore --configfile $(NuGet_Configuration_File)'
  - task: DotNetCoreCLI@2
    displayName: Run dotnet-stryker
    inputs:
      command: 'custom'
      custom: 'stryker'
      arguments: '--config-file-path $(Stryker_Configuration_File)'
      workingDirectory: '$(Test_Project_Directory)'
  - task: PublishMutationReport@1
    displayName: Publish Mutation Test Report
    inputs:
      reportPattern: '**/mutation-report.html'
      useReportFileName: false
